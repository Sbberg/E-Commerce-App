<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
      http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
      http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
      http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">



<!--    The Application Context sets up our IoC container
Inversion of control means that spring creates the dependencies that other objects rely on ,
rather than the objs instantiating the dependencies-->


<!--    Telling Spring to scan our project for @Repository and @Transactional-->
    <tx:annotation-driven/>

<!--    We want Spring to read through our app and configure @Controller-->
    <mvc:annotation-driven/>

<!--    we are telling spring which packages to scan to find our beans-->
    <context:component-scan base-package="com.revature.repos"/>
    <context:component-scan base-package="com.revature.services"/>
    <context:component-scan base-package="com.revature.controllers"/>
    
<!--    DataSource Credentials-->
    <bean name="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="org.postgresql.Driver"/>
        <property name="url" value="jdbc:postgresql://shane-database-1.cjxvsj10hcu7.us-east-1.rds.amazonaws.com:5432/postgres"/>
        <property name="username" value="postgres"/>
        <property name="password" value="postgres"/>
    </bean>

    <bean name="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
<!--        here we are wiring our dataSource bean into our session factory bean-->
        <property name="dataSource" ref="dataSource"/>

<!--        -->
<property name="packagesToScan" value="com.revature.models"/>

        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQL82Dialect</prop>

            </props>

        </property>

    </bean>

</beans>